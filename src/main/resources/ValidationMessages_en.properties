com.whitrus.spring.tester.domain.validation.Hex.message = the value must be ${value.toString().equals('INSENSITIVE')? 'a' : (value.toString().equals('UPPER')? 'an uppercase':'a lowercase')} hexadecimal string

com.whitrus.spring.tester.domain.validation.EntityId.message = invalid entity ID: ${validatedValue}

com.whitrus.spring.tester.domain.validation.conditional.ConditionalValidation.message = the following fields are required when the field '{field}' is present: {missingFields}

com.whitrus.spring.tester.domain.validation.FieldMatch.message = the fields '{first}'  and '{second}' must match

com.whitrus.spring.tester.domain.patch.ValidPatchModification.message = invalid patch modification
com.whitrus.spring.tester.domain.patch.ValidPatchModification.SET.message = the value must be informed when the patch action is 'SET'
com.whitrus.spring.tester.domain.patch.ValidPatchModification.UNSET.message = the value cannot be informed when the patch action is 'UNSET'
com.whitrus.spring.tester.domain.patch.ValidPatchModification.NULL_ACTION.message = the action cannot be null
com.whitrus.spring.tester.domain.patch.ValidPatchModification.DISALLOWED_ACTION.message = the action '{action}' is not allowed for this property

com.whitrus.spring.tester.domain.validation.CNPJ.message = the CNPJ must contain only numbers and have a length of exactly 14 digits
com.whitrus.spring.tester.domain.validation.URL.message = the URL is in an invalid format. Verify that the URL protocol has been informed, e.g.: http://, https://, ftp://
com.whitrus.spring.tester.domain.validation.CEP.message = the CEP must contain only numbers and have a length of exactly 8 digits